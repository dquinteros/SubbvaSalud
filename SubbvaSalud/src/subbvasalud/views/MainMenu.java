/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package subbvasalud.views;

import com.ezware.oxbow.swingbits.table.filter.TableRowFilterSupport;
import java.awt.CardLayout;
import java.awt.event.ItemEvent;
import java.awt.event.WindowEvent;
import static java.awt.image.ImageObserver.WIDTH;
import java.io.File;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import subbvasalud.controllers.AnioController;
import subbvasalud.controllers.EditCargaController;
import subbvasalud.controllers.EditSocioController;
import subbvasalud.controllers.MainMenuController;
import subbvasalud.controllers.PeriodoController;
import subbvasalud.models.Anio;
import subbvasalud.models.Carga;
import subbvasalud.models.Periodo;
import subbvasalud.models.Socio;

/**
 *
 * @author damage
 */
public class MainMenu extends javax.swing.JFrame {

    MainMenuController mmc;
    EditSocioController es;
    EditCargaController ec;
    PeriodoController pc;
    AnioController ac;
    LinkedList<Anio> la;

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        la = new LinkedList<>();
        ac = new AnioController();
        pc = new PeriodoController();
        es = new EditSocioController();
        ec = new EditCargaController();
        mmc = new MainMenuController();
        initComponents();
        mmc.mostrarSocios((DefaultTableModel) viewSociosTable.getModel());
        mmc.mostrarCargas((DefaultTableModel) viewCargasTable.getModel());
        TableRowFilterSupport.forTable(viewSociosTable).searchable(true).apply();
        TableRowFilterSupport.forTable(viewCargasTable).searchable(true).apply();
        TableRowFilterSupport.forTable(mainViewPeriodoTable).searchable(true).apply();
        la = ac.fillAnioComboBox(anioSelectorComboBox);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectSociosFile = new javax.swing.JFileChooser();
        mainView = new javax.swing.JPanel();
        mainViewAnioLabel = new javax.swing.JLabel();
        mainViewPeriodoScrollPanel = new javax.swing.JScrollPane();
        mainViewPeriodoTable = new javax.swing.JTable();
        mainViewSolicitudScrollPanel = new javax.swing.JScrollPane();
        mainViewSolicitudTable = new javax.swing.JTable();
        anioSelectorComboBox = new javax.swing.JComboBox();
        viewSociosPanel = new javax.swing.JPanel();
        viewSociosScrollPanel = new javax.swing.JScrollPane();
        viewSociosTable = new javax.swing.JTable();
        deleteSocioButton = new javax.swing.JButton();
        editSocioButton = new javax.swing.JButton();
        addNewSocioButton = new javax.swing.JButton();
        viewCargasPanel = new javax.swing.JPanel();
        viewCargasScrollPanel = new javax.swing.JScrollPane();
        viewCargasTable = new javax.swing.JTable();
        deleteCargaButton = new javax.swing.JButton();
        editCartaButton = new javax.swing.JButton();
        addNewCargaButton = new javax.swing.JButton();
        newPeriodoPanel = new javax.swing.JPanel();
        newPeriodoNombreLabel = new javax.swing.JLabel();
        newPeriodoAnioLabel = new javax.swing.JLabel();
        newPeriodoNombreTextField = new javax.swing.JTextField();
        newPeriodoCancelarButton = new javax.swing.JButton();
        newPeriodoNuevoPeriodoButton = new javax.swing.JButton();
        newPeriodoSelectAnio = new com.toedter.calendar.JYearChooser();
        newPariodoCamposObligados = new javax.swing.JLabel();
        valorUfLabel = new javax.swing.JLabel();
        valorUfTextField = new javax.swing.JTextField();
        mainMenu = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        mainViewMenuItem = new javax.swing.JMenuItem();
        loadFileSociosMenuItem = new javax.swing.JMenuItem();
        newPeriodoMenuItem = new javax.swing.JMenuItem();
        newSolicitudMenuItem = new javax.swing.JMenuItem();
        viewMenu = new javax.swing.JMenu();
        viewSociosMenuItem = new javax.swing.JMenuItem();
        viewCargasMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 600));
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        getContentPane().setLayout(new java.awt.CardLayout());

        mainView.setBorder(javax.swing.BorderFactory.createTitledBorder("Inicio"));

        mainViewAnioLabel.setText("Año ");

        mainViewPeriodoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Período"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        mainViewPeriodoTable.setColumnSelectionAllowed(true);
        mainViewPeriodoTable.getTableHeader().setReorderingAllowed(false);
        mainViewPeriodoScrollPanel.setViewportView(mainViewPeriodoTable);
        mainViewPeriodoTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        mainViewSolicitudTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rut", "Nombre", "Monto", "Solicitud"
            }
        ));
        mainViewSolicitudScrollPanel.setViewportView(mainViewSolicitudTable);

        anioSelectorComboBox.setEditable(true);
        anioSelectorComboBox.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                anioSelectorComboBoxPopupMenuWillBecomeVisible(evt);
            }
        });
        anioSelectorComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                anioSelectorComboBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout mainViewLayout = new javax.swing.GroupLayout(mainView);
        mainView.setLayout(mainViewLayout);
        mainViewLayout.setHorizontalGroup(
            mainViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainViewLayout.createSequentialGroup()
                        .addComponent(mainViewAnioLabel)
                        .addGap(18, 18, 18)
                        .addComponent(anioSelectorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(mainViewPeriodoScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainViewSolicitudScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainViewLayout.setVerticalGroup(
            mainViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mainViewAnioLabel)
                    .addComponent(anioSelectorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(mainViewPeriodoScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(mainViewSolicitudScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        getContentPane().add(mainView, "mainViewCard");

        viewSociosPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Ver Socios"));

        viewSociosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rut", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        viewSociosScrollPanel.setViewportView(viewSociosTable);

        deleteSocioButton.setText("Eliminar Socio");
        deleteSocioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSocioButtonActionPerformed(evt);
            }
        });

        editSocioButton.setText("Editar Socio");
        editSocioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSocioButtonActionPerformed(evt);
            }
        });

        addNewSocioButton.setText("Agregar Socio");
        addNewSocioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewSocioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewSociosPanelLayout = new javax.swing.GroupLayout(viewSociosPanel);
        viewSociosPanel.setLayout(viewSociosPanelLayout);
        viewSociosPanelLayout.setHorizontalGroup(
            viewSociosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewSociosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewSociosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewSociosScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewSociosPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addNewSocioButton)
                        .addGap(18, 18, 18)
                        .addComponent(editSocioButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteSocioButton)))
                .addContainerGap())
        );
        viewSociosPanelLayout.setVerticalGroup(
            viewSociosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewSociosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewSociosScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(viewSociosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteSocioButton)
                    .addComponent(editSocioButton)
                    .addComponent(addNewSocioButton))
                .addContainerGap())
        );

        getContentPane().add(viewSociosPanel, "viewSociosCard");

        viewCargasPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Ver Cargas"));

        viewCargasTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rut", "Nombre", "Nombre Socio"
            }
        ));
        viewCargasScrollPanel.setViewportView(viewCargasTable);

        deleteCargaButton.setText("Eliminar Carga");
        deleteCargaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCargaButtonActionPerformed(evt);
            }
        });

        editCartaButton.setText("Editar Carga");
        editCartaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCartaButtonActionPerformed(evt);
            }
        });

        addNewCargaButton.setText("Agregar Carga");
        addNewCargaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewCargaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewCargasPanelLayout = new javax.swing.GroupLayout(viewCargasPanel);
        viewCargasPanel.setLayout(viewCargasPanelLayout);
        viewCargasPanelLayout.setHorizontalGroup(
            viewCargasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewCargasPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewCargasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewCargasScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewCargasPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addNewCargaButton)
                        .addGap(18, 18, 18)
                        .addComponent(editCartaButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteCargaButton)))
                .addContainerGap())
        );
        viewCargasPanelLayout.setVerticalGroup(
            viewCargasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewCargasPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewCargasScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(viewCargasPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteCargaButton)
                    .addComponent(editCartaButton)
                    .addComponent(addNewCargaButton))
                .addContainerGap())
        );

        getContentPane().add(viewCargasPanel, "viewCargasCard");

        newPeriodoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Nuevo Periodo"));

        newPeriodoNombreLabel.setText("Nombre Periodo *");

        newPeriodoAnioLabel.setText("Año *");

        newPeriodoNombreTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                newPeriodoNombreTextFieldKeyTyped(evt);
            }
        });

        newPeriodoCancelarButton.setText("Cancelar");

        newPeriodoNuevoPeriodoButton.setText("Nuevo Periodo");
        newPeriodoNuevoPeriodoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPeriodoNuevoPeriodoButtonActionPerformed(evt);
            }
        });

        newPariodoCamposObligados.setText("* Campos obligatorios");

        valorUfLabel.setText("Valor UF *");

        valorUfTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                valorUfTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout newPeriodoPanelLayout = new javax.swing.GroupLayout(newPeriodoPanel);
        newPeriodoPanel.setLayout(newPeriodoPanelLayout);
        newPeriodoPanelLayout.setHorizontalGroup(
            newPeriodoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newPeriodoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newPeriodoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newPeriodoPanelLayout.createSequentialGroup()
                        .addComponent(newPariodoCamposObligados)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 279, Short.MAX_VALUE)
                        .addComponent(newPeriodoNuevoPeriodoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(newPeriodoCancelarButton))
                    .addGroup(newPeriodoPanelLayout.createSequentialGroup()
                        .addGroup(newPeriodoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newPeriodoNombreLabel)
                            .addComponent(newPeriodoAnioLabel)
                            .addComponent(valorUfLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(newPeriodoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newPeriodoNombreTextField)
                            .addGroup(newPeriodoPanelLayout.createSequentialGroup()
                                .addGroup(newPeriodoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(newPeriodoSelectAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(valorUfTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        newPeriodoPanelLayout.setVerticalGroup(
            newPeriodoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newPeriodoPanelLayout.createSequentialGroup()
                .addGroup(newPeriodoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(newPeriodoPanelLayout.createSequentialGroup()
                        .addGroup(newPeriodoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newPeriodoNombreLabel)
                            .addComponent(newPeriodoNombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(newPeriodoAnioLabel))
                    .addComponent(newPeriodoSelectAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newPeriodoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valorUfLabel)
                    .addComponent(valorUfTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 268, Short.MAX_VALUE)
                .addGroup(newPeriodoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPeriodoCancelarButton)
                    .addComponent(newPeriodoNuevoPeriodoButton)
                    .addComponent(newPariodoCamposObligados))
                .addContainerGap())
        );

        getContentPane().add(newPeriodoPanel, "newPeriodoCard");

        fileMenu.setText("Archivo");

        mainViewMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        mainViewMenuItem.setText("Inicio");
        mainViewMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainViewMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(mainViewMenuItem);

        loadFileSociosMenuItem.setText("Cargar archivo de socios");
        loadFileSociosMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadFileSociosMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(loadFileSociosMenuItem);

        newPeriodoMenuItem.setText("Nuevo periodo");
        newPeriodoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPeriodoMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newPeriodoMenuItem);

        newSolicitudMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newSolicitudMenuItem.setText("Nueva Solicitud");
        newSolicitudMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newSolicitudMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newSolicitudMenuItem);

        mainMenu.add(fileMenu);

        viewMenu.setText("Ver");

        viewSociosMenuItem.setText("Ver Socios");
        viewSociosMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewSociosMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(viewSociosMenuItem);

        viewCargasMenuItem.setText("Ver Cargas");
        viewCargasMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCargasMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(viewCargasMenuItem);

        mainMenu.add(viewMenu);

        editMenu.setText("Editar");
        mainMenu.add(editMenu);

        setJMenuBar(mainMenu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewSociosMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewSociosMenuItemActionPerformed

        CardLayout cl = (CardLayout) (getContentPane().getLayout());
        cl.show(getContentPane(), "viewSociosCard");
        TableRowFilterSupport.forTable(viewSociosTable).searchable(true).apply();

        while (((DefaultTableModel) viewSociosTable.getModel()).getRowCount() != 0) {
            ((DefaultTableModel) viewSociosTable.getModel()).removeRow(0);
        }
        mmc.mostrarSocios((DefaultTableModel) viewSociosTable.getModel());

    }//GEN-LAST:event_viewSociosMenuItemActionPerformed

    private void loadFileSociosMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadFileSociosMenuItemActionPerformed
        int rv = selectSociosFile.showOpenDialog(getContentPane());
        if (rv == JFileChooser.APPROVE_OPTION) {
            File file = selectSociosFile.getSelectedFile();
            System.out.println("Archivo " + file.getPath());
        }
    }//GEN-LAST:event_loadFileSociosMenuItemActionPerformed

    private void viewCargasMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCargasMenuItemActionPerformed
        CardLayout cl = (CardLayout) (getContentPane().getLayout());
        cl.show(getContentPane(), "viewCargasCard");
    }//GEN-LAST:event_viewCargasMenuItemActionPerformed

    private void newPeriodoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPeriodoMenuItemActionPerformed
        CardLayout cl = (CardLayout) (getContentPane().getLayout());
        cl.show(getContentPane(), "newPeriodoCard");
    }//GEN-LAST:event_newPeriodoMenuItemActionPerformed

    private void newSolicitudMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newSolicitudMenuItemActionPerformed
        NewSolicitud.main(null);
    }//GEN-LAST:event_newSolicitudMenuItemActionPerformed

    private void editSocioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSocioButtonActionPerformed
        int row = viewSociosTable.getSelectedRow();
        if (row != -1) {
            int rut = (int) viewSociosTable.getModel().getValueAt(row, 0);
            int id = mmc.getIdSociosByRut(rut);

            String[] arg = new String[2];
            arg[0] = id + "";
            arg[1] = viewSociosTable.toString();
            EditSocio.main(arg);
        } else {
            JOptionPane.showMessageDialog(this, "Para editar debe seleccionar un socio.", "Seleccionar Socio", WIDTH);
        }
    }//GEN-LAST:event_editSocioButtonActionPerformed

    private void addNewSocioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewSocioButtonActionPerformed
        NewSocio.main(null);
    }//GEN-LAST:event_addNewSocioButtonActionPerformed

    private void deleteSocioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSocioButtonActionPerformed
        int row = viewSociosTable.getSelectedRow();
        if (row != -1) {
            int rut = (int) viewSociosTable.getModel().getValueAt(row, 0);
            Socio s = new Socio();
            s = s.getSociosByRut(rut);
            s.setIdEstado(0);
            LinkedList<Carga> lc = new LinkedList<>();
            Carga c = new Carga();
            lc = c.getAllCargasByIdSocio(s.getIdSocio());
            for (Carga ca : lc) {
                ca.setIdEstado(0);
                ec.editarCarga(ca);
            }
            es.editarSocio(s);
        } else {
            JOptionPane.showMessageDialog(this, "Para eliminar debe seleccionar un socio.", "Seleccionar Socio", WIDTH);
        }
        refresh();
    }//GEN-LAST:event_deleteSocioButtonActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        refresh();
    }//GEN-LAST:event_formWindowGainedFocus

    private void addNewCargaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewCargaButtonActionPerformed
        NewCarga.main(null);
    }//GEN-LAST:event_addNewCargaButtonActionPerformed

    private void editCartaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCartaButtonActionPerformed
        int row = viewCargasTable.getSelectedRow();
        if (row != -1) {
            int rut = (int) viewCargasTable.getModel().getValueAt(row, 0);
            int id = mmc.getIdCargasByRut(rut);

            String[] arg = new String[2];
            arg[0] = id + "";
            arg[1] = viewCargasTable.toString();
            EditCarga.main(arg);
        } else {
            JOptionPane.showMessageDialog(this, "Para editar debe seleccionar una carga.", "Seleccionar Cargas", WIDTH);
        }
    }//GEN-LAST:event_editCartaButtonActionPerformed

    private void deleteCargaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCargaButtonActionPerformed
        int row = viewCargasTable.getSelectedRow();
        if (row != -1) {
            int rut = (int) viewCargasTable.getModel().getValueAt(row, 0);
            Carga c = new Carga();
            c = c.getCargasByRut(rut);
            c.setIdEstado(0);
            ec.editarCarga(c);
        } else {
            JOptionPane.showMessageDialog(this, "Para eliminar debe seleccionar un socio.", "Seleccionar Socio", WIDTH);
        }
        refresh();
    }//GEN-LAST:event_deleteCargaButtonActionPerformed

    private void newPeriodoNuevoPeriodoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPeriodoNuevoPeriodoButtonActionPerformed
        if (!pc.validateNullMainFields(newPeriodoNombreTextField, valorUfTextField)) {
            int year = newPeriodoSelectAnio.getYear();
            Anio a = ac.getAnioByAnioNumber(year);
            if (a.getId_anio() != 0) {
                Periodo p = new Periodo(-1, a.getId_anio(), 1, newPeriodoNombreTextField.getText(), Integer.parseInt(valorUfTextField.getText()));
                pc.guardarPeriodo(p);
                CardLayout cl = (CardLayout) (getContentPane().getLayout());
                cl.show(getContentPane(), "mainViewCard");
                int anio = (int) anioSelectorComboBox.getSelectedItem();
                if (anio != 0) {
                    while (((DefaultTableModel) mainViewPeriodoTable.getModel()).getRowCount() != 0) {
                        ((DefaultTableModel) mainViewPeriodoTable.getModel()).removeRow(0);
                    }
                    pc.mostrarPeriodos((DefaultTableModel) mainViewPeriodoTable.getModel(), anio);
                }
                System.out.println("Control");

            } else {
                Anio newYear = new Anio();
                newYear.setNumero_anio(year);
                ac.guardarAnio(newYear);
                Anio an = ac.getAnioByAnioNumber(year);
                Periodo p = new Periodo(-1, an.getId_anio(), 1, newPeriodoNombreTextField.getText(), Integer.parseInt(valorUfTextField.getText()));
                pc.guardarPeriodo(p);
                CardLayout cl = (CardLayout) (getContentPane().getLayout());
                cl.show(getContentPane(), "mainViewCard");
                int anio = (int) anioSelectorComboBox.getSelectedItem();
                if (anio != 0) {
                    while (((DefaultTableModel) mainViewPeriodoTable.getModel()).getRowCount() != 0) {
                        ((DefaultTableModel) mainViewPeriodoTable.getModel()).removeRow(0);
                    }
                    pc.mostrarPeriodos((DefaultTableModel) mainViewPeriodoTable.getModel(), anio);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Los campos obligatorios no pueden estar vacíos", "Campos vacíos", WIDTH);
        }
    }//GEN-LAST:event_newPeriodoNuevoPeriodoButtonActionPerformed

    private void newPeriodoNombreTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newPeriodoNombreTextFieldKeyTyped
        ViewUtils.maxLongInput(evt, newPeriodoNombreTextField, 45);
    }//GEN-LAST:event_newPeriodoNombreTextFieldKeyTyped

    private void mainViewMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainViewMenuItemActionPerformed
        CardLayout cl = (CardLayout) (getContentPane().getLayout());
        cl.show(getContentPane(), "mainViewCard");
    }//GEN-LAST:event_mainViewMenuItemActionPerformed

    private void anioSelectorComboBoxPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_anioSelectorComboBoxPopupMenuWillBecomeVisible
        anioSelectorComboBox.removeAllItems();
        la = ac.fillAnioComboBox(anioSelectorComboBox);
    }//GEN-LAST:event_anioSelectorComboBoxPopupMenuWillBecomeVisible

    private void anioSelectorComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_anioSelectorComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            int year = (int) anioSelectorComboBox.getSelectedItem();
            if (year != 0) {
                while (((DefaultTableModel) mainViewPeriodoTable.getModel()).getRowCount() != 0) {
                    ((DefaultTableModel) mainViewPeriodoTable.getModel()).removeRow(0);
                }
                pc.mostrarPeriodos((DefaultTableModel) mainViewPeriodoTable.getModel(), year);
            }
        }
    }//GEN-LAST:event_anioSelectorComboBoxItemStateChanged

    private void valorUfTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorUfTextFieldKeyTyped
        ViewUtils.onlyNumbers(evt, valorUfTextField, 6);
    }//GEN-LAST:event_valorUfTextFieldKeyTyped

    private void refresh() {
        while (((DefaultTableModel) viewSociosTable.getModel()).getRowCount() != 0) {
            ((DefaultTableModel) viewSociosTable.getModel()).removeRow(0);
        }
        while (((DefaultTableModel) viewCargasTable.getModel()).getRowCount() != 0) {
            ((DefaultTableModel) viewCargasTable.getModel()).removeRow(0);
        }
        mmc.mostrarSocios((DefaultTableModel) viewSociosTable.getModel());
        mmc.mostrarCargas((DefaultTableModel) viewCargasTable.getModel());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewCargaButton;
    private javax.swing.JButton addNewSocioButton;
    private javax.swing.JComboBox anioSelectorComboBox;
    private javax.swing.JButton deleteCargaButton;
    private javax.swing.JButton deleteSocioButton;
    private javax.swing.JButton editCartaButton;
    private javax.swing.JMenu editMenu;
    private javax.swing.JButton editSocioButton;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem loadFileSociosMenuItem;
    private javax.swing.JMenuBar mainMenu;
    private javax.swing.JPanel mainView;
    private javax.swing.JLabel mainViewAnioLabel;
    private javax.swing.JMenuItem mainViewMenuItem;
    private javax.swing.JScrollPane mainViewPeriodoScrollPanel;
    private javax.swing.JTable mainViewPeriodoTable;
    private javax.swing.JScrollPane mainViewSolicitudScrollPanel;
    private javax.swing.JTable mainViewSolicitudTable;
    private javax.swing.JLabel newPariodoCamposObligados;
    private javax.swing.JLabel newPeriodoAnioLabel;
    private javax.swing.JButton newPeriodoCancelarButton;
    private javax.swing.JMenuItem newPeriodoMenuItem;
    private javax.swing.JLabel newPeriodoNombreLabel;
    private javax.swing.JTextField newPeriodoNombreTextField;
    private javax.swing.JButton newPeriodoNuevoPeriodoButton;
    private javax.swing.JPanel newPeriodoPanel;
    private com.toedter.calendar.JYearChooser newPeriodoSelectAnio;
    private javax.swing.JMenuItem newSolicitudMenuItem;
    private javax.swing.JFileChooser selectSociosFile;
    private javax.swing.JLabel valorUfLabel;
    private javax.swing.JTextField valorUfTextField;
    private javax.swing.JMenuItem viewCargasMenuItem;
    private javax.swing.JPanel viewCargasPanel;
    private javax.swing.JScrollPane viewCargasScrollPanel;
    private javax.swing.JTable viewCargasTable;
    private javax.swing.JMenu viewMenu;
    private javax.swing.JMenuItem viewSociosMenuItem;
    private javax.swing.JPanel viewSociosPanel;
    private javax.swing.JScrollPane viewSociosScrollPanel;
    private javax.swing.JTable viewSociosTable;
    // End of variables declaration//GEN-END:variables
}
